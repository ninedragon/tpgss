<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zz.common.dao.FaultInfoMapper">
  <resultMap id="BaseResultMap" type="com.zz.common.model.FaultInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="row_id" jdbcType="VARCHAR" property="row_id" />
    <result column="row_name" jdbcType="VARCHAR" property="row_name" />
    <result column="fault_type" jdbcType="VARCHAR" property="fault_type" />
    <result column="occur_time" jdbcType="TIMESTAMP" property="occur_time" />
    <result column="is_cancelled" jdbcType="VARCHAR" property="is_cancelled" />
    <result column="is_cancelled_name" jdbcType="VARCHAR" property="is_cancelled_name" />
    <result column="is_repaired" jdbcType="VARCHAR" property="is_repaired" />
    <result column="is_repaired_name" jdbcType="VARCHAR" property="is_repaired_name" />
    <result column="repair_time" jdbcType="TIMESTAMP" property="repair_time" />
    <result column="faultTypeName" jdbcType="VARCHAR" property="faultTypeName" />
    <result column="epu_province" jdbcType="VARCHAR" property="epu_province" />
    <result column="epu_city" jdbcType="VARCHAR" property="epu_city" />
    <result column="epu_district" jdbcType="VARCHAR" property="epu_district" />
    <result column="epu_name" jdbcType="VARCHAR" property="epu_name" />
    <result column="epu_province_name" jdbcType="VARCHAR" property="epu_province_name" />
    <result column="epu_city_name" jdbcType="VARCHAR" property="epu_city_name" />
    <result column="epu_district_name" jdbcType="VARCHAR" property="epu_district_name" />
    <result column="epu_type_name" jdbcType="VARCHAR" property="epu_type_name" />
    <result column="fault_base_id" jdbcType="VARCHAR" property="fault_base_id" />
  </resultMap>
   <resultMap id="CodeTypeResultMap" type="com.zz.common.model.CodeInfo">
   		    <result column="CODE" jdbcType="VARCHAR" property="CODE" />
		    <result column="CODE_NAME" jdbcType="VARCHAR" property="CODE_NAME" />
		    <result column="CODE_TYPE" jdbcType="VARCHAR" property="CODE_TYPE" />
		    <result column="CODE_TYPE_CN" jdbcType="VARCHAR" property="CODE_TYPE_CN" />
		    <result column="REMARK" jdbcType="VARCHAR" property="REMARK" />
   </resultMap>
    <resultMap id="FaultRenderingMap" type="com.zz.common.model.FaultRendering">
   		     <id column="id" jdbcType="VARCHAR" property="id" />
		    <result column="type" jdbcType="VARCHAR" property="type" />
		    <result column="epuName" jdbcType="VARCHAR" property="epuName" />
		    <result column="fault_Type" jdbcType="VARCHAR" property="faultType" />
		    <result column="faultTypeName" jdbcType="VARCHAR" property="faultTypeName" />
		    <result column="occur_time" jdbcType="VARCHAR" property="occur_time" />
		    <result column="is_cancelled" jdbcType="VARCHAR" property="is_cancelled" />
		    <result column="is_repaired" jdbcType="VARCHAR" property="is_repaired" />
		    <result column="repair_time" jdbcType="VARCHAR" property="repair_time" />
   </resultMap>
    <resultMap id="TopoErrorMap" type="com.zz.common.model.TopoErrorInfo">
    		  <id column="id" jdbcType="VARCHAR" property="id" />
    		   <result column="epuName" jdbcType="VARCHAR" property="epuName" />
		    <result column="type" jdbcType="VARCHAR" property="type" />
		    <result column="key" jdbcType="VARCHAR" property="key" />
		    <result column="fault_type" jdbcType="VARCHAR" property="fault_type" />
		    <result column="error_num" jdbcType="VARCHAR" property="error_num" />
   </resultMap>
    <resultMap id="TopoErrorRelMap" type="com.zz.common.model.TopoErrorRelInfo">
    		  <id column="id" jdbcType="VARCHAR" property="id" />
		    <result column="type" jdbcType="VARCHAR" property="type" />
		    <result column="epuName" jdbcType="VARCHAR" property="epuName" />
		    <result column="key" jdbcType="VARCHAR" property="key" />
		    <result column="fault_point" jdbcType="VARCHAR" property="fault_point" />
		    <result column="branchbox_error_id" jdbcType="VARCHAR" property="branchbox_error_id" />
   </resultMap>
    <resultMap id="FaultSourceMap" type="com.zz.common.model.FaultSource">
    		  <id column="id" jdbcType="VARCHAR" property="id" />
		    <result column="fault_id" jdbcType="VARCHAR" property="fault_id" />
		    <result column="table_name" jdbcType="VARCHAR" property="table_name" />
		    <result column="record_id" jdbcType="VARCHAR" property="record_id" />
   </resultMap>
     <sql id="limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      	${page_sql}
      </if>
  </sql>
  <select id="findAll" resultMap="BaseResultMap" parameterType="java.util.Map" >
	SELECT
		temp.row_id,
		temp.row_name,
		temp.fault_base_id,
		temp.fault_type,
		temp.occur_time,
		temp.is_cancelled,
		(
			CASE
			WHEN temp.is_cancelled = '0' THEN
				'否'
			WHEN temp.is_cancelled = '1' THEN
				'是'
			ELSE
				''
			END
		) AS is_cancelled_name,
		temp.is_repaired,
		(
			CASE
			WHEN temp.is_repaired = '0' THEN
				'否'
			WHEN temp.is_repaired = '1' THEN
				'是'
			ELSE
				''
			END
		) AS is_repaired_name,
		temp.repair_time,
		temp.faultTypeName,
		temp.epu_province,
		temp.epu_city,
		temp.epu_district,
		temp.epu_name,
		temp.epu_province_name,
		temp.epu_city_name,
		temp.epu_district_name,
		temp.epu_type_name
	FROM
		(
			SELECT
				fault.key_id,
				am.meterId as row_id,
				am.meter_name AS row_name,
				fault.fault_base_id,
				fault.fault_type,
				fault.occur_time,
				fault.is_cancelled,
				fault.is_repaired,
				fault.repair_time,
				code_define.CODE_NAME AS faultTypeName,
				epu.epu_province,
				epu.epu_city,
				epu.epu_district,
				epu.epu_name,
				epu.epu_province_name,
				epu.epu_city_name,
				epu.epu_district_name,
				code_define1.CODE_NAME AS epu_type_name
			FROM
				t_fault_now AS fault
			INNER JOIN t_meter am ON fault.key_id = am.meterId
			LEFT JOIN t_sy_code_define AS code_define ON code_define.`CODE` = fault.fault_type
			LEFT JOIN t_sy_code_define AS code_define1 ON code_define1.`CODE` = 'M0005'
			LEFT JOIN view_epu_info epu ON am.meterBoxId = epu.row_id
			WHERE
				1 = 1
			AND am.DEL_FLAG = '0'
			AND epu.DEL_FLAG = '0'
			UNION
				SELECT
					fault.key_id,
					epu.row_id,
					epu.epu_name AS row_name,
					fault.fault_base_id,
					fault.fault_type,
					fault.occur_time,
					fault.is_cancelled,
					fault.is_repaired,
					fault.repair_time,
					code_define.CODE_NAME AS faultTypeName,
					epu.epu_province,
					epu.epu_city,
					epu.epu_district,
					epu.epu_name,
					epu.epu_province_name,
					epu.epu_city_name,
					epu.epu_district_name,
					epu.epu_type_name
				FROM
					t_fault_now AS fault
				LEFT JOIN t_sy_code_define AS code_define ON code_define.`CODE` = fault.fault_type
				LEFT JOIN view_epu_info epu ON fault.key_id = epu.row_id
				WHERE
					1 = 1
				AND epu.DEL_FLAG = '0'
		) AS temp
		WHERE 1=1
		<if test="row_name != '' and row_name != null"> 
	       	AND LOWER(temp.row_name) like  LOWER(CONCAT("%",#{row_name,jdbcType=VARCHAR},"%")) 
	     </if>	
	      <if test="fault_type != '' and fault_type != null">  
	        AND temp.fault_type=  #{fault_type,jdbcType=VARCHAR}
	      </if>	
	      <if test="is_repaired != '' and is_repaired != null">  
	        AND temp.is_repaired=  #{is_repaired,jdbcType=INTEGER}
	      </if>	
	      <if test="str_occur_time != '' and str_occur_time != null">  
	        AND DATE_FORMAT(temp.occur_time,'%Y-%m-%d')= #{str_occur_time,jdbcType=VARCHAR}
	      </if>	
	      <if test="keyList!=null and keyList.size()>0">
		       AND temp.key_id IN 
	        <foreach collection="keyList" item="key" index="index" open="(" separator=","  close=")"> 
			   #{key}
			</foreach>
        </if>
			 <![CDATA[ ${paramSQL} ]]>    
	ORDER BY temp.occur_time DESC
    <include refid="limit_sql" />
  </select>
  <select id="findCount" resultMap="BaseResultMap" parameterType="java.util.Map" >
 	SELECT
		count(temp.row_id)
	FROM
		(
			SELECT
				fault.key_id,
				am.meterId as row_id,
				am.meter_name AS row_name,
				fault.fault_base_id,
				fault.fault_type,
				fault.occur_time,
				fault.is_cancelled,
				fault.is_repaired,
				fault.repair_time,
				code_define.CODE_NAME AS faultTypeName,
				epu.epu_province,
				epu.epu_city,
				epu.epu_district,
				epu.epu_name,
				epu.epu_province_name,
				epu.epu_city_name,
				epu.epu_district_name,
				code_define1.CODE_NAME AS epu_type_name
			FROM
				t_fault_now AS fault
			INNER JOIN t_meter am ON fault.key_id = am.meterId
			LEFT JOIN t_sy_code_define AS code_define ON code_define.`CODE` = fault.fault_type
			LEFT JOIN t_sy_code_define AS code_define1 ON code_define1.`CODE` = 'M0005'
			LEFT JOIN view_epu_info epu ON am.meterBoxId = epu.row_id
			WHERE
				1 = 1
			AND am.DEL_FLAG = '0'
			AND epu.DEL_FLAG = '0'
			UNION
				SELECT
					fault.key_id,
					epu.row_id,
					epu.epu_name AS row_name,
					fault.fault_base_id,
					fault.fault_type,
					fault.occur_time,
					fault.is_cancelled,
					fault.is_repaired,
					fault.repair_time,
					code_define.CODE_NAME AS faultTypeName,
					epu.epu_province,
					epu.epu_city,
					epu.epu_district,
					epu.epu_name,
					epu.epu_province_name,
					epu.epu_city_name,
					epu.epu_district_name,
					epu.epu_type_name
				FROM
					t_fault_now AS fault
				LEFT JOIN t_sy_code_define AS code_define ON code_define.`CODE` = fault.fault_type
				LEFT JOIN view_epu_info epu ON fault.key_id = epu.row_id
				WHERE
					1 = 1
				AND epu.DEL_FLAG = '0'
		) AS temp
		WHERE 1=1
		<if test="row_name != '' and row_name != null"> 
	       	AND LOWER(temp.row_name) like  LOWER(CONCAT("%",#{row_name,jdbcType=VARCHAR},"%")) 
	     </if>	
	      <if test="fault_type != '' and fault_type != null">  
	        AND temp.fault_type=  #{fault_type,jdbcType=VARCHAR}
	      </if>	
	       <if test="str_occur_time != '' and str_occur_time != null">  
	        AND DATE_FORMAT(temp.occur_time,'%Y-%m-%d')= #{str_occur_time,jdbcType=VARCHAR}
	      </if>	
	       <if test="is_repaired != '' and is_repaired != null">  
	        AND temp.is_repaired=  #{is_repaired,jdbcType=INTEGER}
	      </if>	
	      <if test="keyList!=null and keyList.size()>0">
		       AND temp.key_id IN 
            <foreach collection="keyList" item="key" index="index" open="(" separator=","  close=")"> 
			   #{key}
			</foreach>
        </if>
			 <![CDATA[ ${paramSQL} ]]>    
  </select> 
   <select id="selectTypeList" resultMap="CodeTypeResultMap" parameterType="java.util.List">
   		SELECT
   			CODE,
			CODE_NAME,
			CODE_TYPE,
			CODE_TYPE_CN,
			REMARK
   		FROM t_sy_code_define
   		WHERE CODE_TYPE IN 
          <foreach collection="list" index="index" item="item" open="(" separator="," close=")">  
            #{item}  
        </foreach>
        ORDER BY CODE_TYPE,ORDER_NUM 
   </select>
    <select id="selectFaultByRootId" resultMap="FaultRenderingMap" parameterType="java.util.Map" >
    	SELECT
    		temp.id,
			temp.type,
			temp.`key`,
			temp.epuName,
			temp.fault_type,
			temp.faultTypeName,
			temp.occur_time,
			temp.is_cancelled,
			temp.is_repaired,
			temp.repair_time
    	 FROM (
    		SELECT
				fault.id,
				code_define1.`CODE` AS type,
				fault.key_id AS `key`,
				am.meter_name AS epuName,
				fault.fault_type,
				code_define.CODE_NAME AS faultTypeName,
				fault.occur_time,
				fault.is_cancelled,
				fault.is_repaired,
				fault.repair_time
			FROM
				t_fault_now AS fault
			INNER JOIN t_meter am ON fault.key_id = am.meterId
			LEFT JOIN t_sy_code_define AS code_define ON code_define.`CODE` = fault.fault_type
			LEFT JOIN t_sy_code_define AS code_define1 ON code_define1.`CODE` = 'M0005'
			LEFT JOIN view_epu_info epu ON am.meterBoxId = epu.row_id
			WHERE
				1 = 1
			AND am.DEL_FLAG = '0'
			AND epu.DEL_FLAG = '0'
			 <![CDATA[ ${paramSQL} ]]>   
			UNION
				SELECT
					fault.id,
					epu.epu_type AS type,
					fault.key_id AS `key`,
					epu.epu_name AS epuName,
					fault.fault_type,
					code_define.CODE_NAME AS faultTypeName,
					fault.occur_time,
					fault.is_cancelled,
					fault.is_repaired,
					fault.repair_time
				
				FROM
					t_fault_now AS fault
				LEFT JOIN t_sy_code_define AS code_define ON code_define.`CODE` = fault.fault_type
				LEFT JOIN view_epu_info epu ON fault.key_id = epu.row_id
				WHERE
					1 = 1
				AND epu.DEL_FLAG = '0'
				 <![CDATA[ ${paramSQL} ]]>    
    	)AS  temp
    	 ORDER BY temp.occur_time  DESC
    </select>
    <!-- 查询故障消息 -->
     <select id="selectFaultNews" resultMap="FaultRenderingMap" parameterType="java.util.Map" >
     	SELECT
			t_substain.substainId AS `key`,
			t_substain.epu_name AS epuName
		FROM
			(
				SELECT
					substain_id
				FROM
					t_fault_now WHERE is_repaired='0' AND is_cancelled='0'
				GROUP BY
					substain_id
			) TEMP
		INNER JOIN t_substain ON TEMP.substain_id = t_substain.substainId
		ORDER BY t_substain.epu_name
     </select>
   <select id="selectBranchboxErrorByKeys" resultMap="TopoErrorMap" parameterType="java.util.Map" >
   			SELECT 
   			id,
   			t_branchbox.epu_name as epuName,
			type,
			key_id  AS `key`,
			fault_type,
			error_num
   			FROM t_branchbox_error
			INNER JOIN t_branchbox ON t_branchbox_error.key_id = t_branchbox.branchBoxId
			WHERE 1 = 1
			 <![CDATA[ ${paramSQL} ]]>    
    </select>
     <select id="selectMeterboxErrorByKeys" resultMap="TopoErrorRelMap" parameterType="java.util.Map" >
     		SELECT
				id,
				type,
				t_meterbox.epu_name AS epuName,
				key_id AS `key`,
				fault_point,
				branchbox_error_id
			FROM
				t_meterbox_error
			INNER JOIN t_meterbox ON t_meterbox_error.key_id = t_meterbox.meterBoxId
			WHERE 1 = 1  AND branchbox_error_id = #{branchbox_error_id,jdbcType=VARCHAR}
     </select>
     <select id="getFaultSourceList" resultMap="FaultSourceMap" parameterType="java.lang.String">
     		SELECT
				id,
				fault_id,
				table_name,
				record_id
			FROM
				t_fault_source
			WHERE 1 = 1  AND fault_id = #{fault_base_id,jdbcType=VARCHAR}
     </select>
     
</mapper>