<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zz.common.dao.TAmmeterInfoMapper">
  <resultMap id="BaseResultMap" type="com.zz.common.model.TAmmeterInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="row_id" jdbcType="VARCHAR" property="rowId" />
    <result column="epu_id" jdbcType="VARCHAR" property="epuId" />
    <result column="ammeter_name" jdbcType="VARCHAR" property="ammeterName" />
    <result column="ammeter_id" jdbcType="VARCHAR" property="ammeterId" />
    <result column="house_id" jdbcType="VARCHAR" property="houseId" />
    <result column="phase_remark" jdbcType="VARCHAR" property="phaseRemark" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="CREATE_ID" jdbcType="VARCHAR" property="createId" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="UPDATE_ID" jdbcType="VARCHAR" property="updateId" />
    <result column="DEL_FLAG" jdbcType="VARCHAR" property="delFlag" />
    <result column="district_id" jdbcType="VARCHAR" property="districtId" />
    <result column="address_id" jdbcType="VARCHAR" property="addressId" />
    <result column="channel_id" jdbcType="VARCHAR" property="channelId" />
    <result column="epu_id" jdbcType="VARCHAR" property="epuId" />
     <result column="epu_name" jdbcType="VARCHAR" property="epuName" />
       <result column="epu_province" jdbcType="VARCHAR" property="epuProvince" />
    <result column="epu_city" jdbcType="VARCHAR" property="epuCity" />
    <result column="epu_district" jdbcType="VARCHAR" property="epuDistrict" />
       <result column="epu_province_name" property="epuProvinceName" jdbcType="VARCHAR" />
    <result column="epu_city_name" property="epuCityName" jdbcType="VARCHAR" />
    <result column="epu_district_name" property="epuDistrictName" jdbcType="VARCHAR" />
        <result column="epu_type" property="epuType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
   meterId as row_id, meterBoxId  as epu_id, meter_name as ammeter_name,  meter_no as ammeter_id, house_id, phase_remark, CREATE_TIME, CREATE_ID, 
    UPDATE_TIME, UPDATE_ID, DEL_FLAG, district_id, address_id, channel_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
   <include refid="Base_Column_List" />
    from t_meter
    where meterId = #{rowId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_meter
    where meterId = #{rowId,jdbcType=VARCHAR}
  </delete>
 
  <insert id="insertSelective" parameterType="com.zz.common.model.TAmmeterInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_meter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rowId != null">
        meterId,
      </if>
      <if test="epuId != null">
        meterBoxId,
      </if>
      <if test="ammeterName != null">
        meter_name,
      </if>
      <if test="ammeterId != null">
        meter_no,
      </if>
      <if test="houseId != null">
        house_id,
      </if>
      <if test="phaseRemark != null">
        phase_remark,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createId != null">
        CREATE_ID,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateId != null">
        UPDATE_ID,
      </if>
      <if test="delFlag != null">
        DEL_FLAG,
      </if>
      <if test="districtId != null">
        C_DistrictBCDId,
      </if>
      <if test="addressId != null">
        C_AddressId,
      </if>
      <if test="channelId != null">
        C_ChannelId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rowId != null">
        #{rowId,jdbcType=VARCHAR},
      </if>
      <if test="epuId != null">
        #{epuId,jdbcType=VARCHAR},
      </if>
      <if test="ammeterName != null">
        #{ammeterName,jdbcType=VARCHAR},
      </if>
      <if test="ammeterId != null">
        #{ammeterId,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null">
        #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="phaseRemark != null">
        #{phaseRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="districtId != null">
        #{districtId,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zz.common.model.TAmmeterInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_meter
    <set>
      <if test="epuId != null">
        meterBoxId = #{epuId,jdbcType=VARCHAR},
      </if>
      <if test="ammeterName != null">
        meter_name = #{ammeterName,jdbcType=VARCHAR},
      </if>
      <if test="ammeterId != null">
        meter_no = #{ammeterId,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null">
        house_id = #{houseId,jdbcType=VARCHAR},
      </if>
      <if test="phaseRemark != null">
        phase_remark = #{phaseRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        CREATE_ID = #{createId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        UPDATE_ID = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        DEL_FLAG = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="districtId != null">
        C_DistrictBCDId = #{districtId,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null">
        C_AddressId = #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        C_ChannelId = #{channelId,jdbcType=VARCHAR},
      </if>
    </set>
    where meterId = #{rowId,jdbcType=VARCHAR}
  </update>
  
   <select id="selectEpuNameByAm" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
   SELECT
		row_id as epu_id,
		district_id,
		address_id,
		channel_id,
		epu_name
	FROM
	view_epu_info
	WHERE
		epu_type = 'M0004' and  epu_district= #{epuDistrict,jdbcType=VARCHAR}
	ORDER BY
		epu_name
  </select>
   <sql id="limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      	${page_sql}
      </if>
  </sql>
  <select id="findAll" resultMap="BaseResultMap" >
		SELECT
	am.meterId as row_id,
	am.meterBoxId as epu_id,
	am.meter_name as ammeter_name,
	am.meter_no as ammeter_id,
	am.house_id,
	am.phase_remark,
	am.CREATE_TIME,
	am.CREATE_ID,
	am.UPDATE_TIME,
	am.UPDATE_ID,
	am.DEL_FLAG,
	am.C_DistrictBCDId as district_id,
	am.C_AddressId as address_id,
	am.C_ChannelId as channel_id,
	epu.epu_province,
	epu.epu_city,
	epu.epu_district,
	epu.epu_name,
	epu_province_name,
	epu_city_name,
	epu_district_name
	FROM
	t_meter am
	LEFT JOIN view_epu_info epu ON am.meterBoxId = epu.row_id
		where 1=1 and am.DEL_FLAG='0' and epu.DEL_FLAG='0' 
 	  	  <if test="epuProvince != '' and epuProvince != null">  
	        and epu.epu_province=  #{epuProvince,jdbcType=VARCHAR}
	      </if>	
	      <if test="epuCity != '' and epuCity != null">  
	        and epu.epu_city=  #{epuCity,jdbcType=VARCHAR}
	      </if>	
	      <if test="epuDistrict != '' and epuDistrict != null">  
	        and epu.epu_district=  #{epuDistrict,jdbcType=VARCHAR}
	      </if>	
	      
	      <if test="ammeterName != '' and ammeterName != null"> 
	       and LOWER(am.meter_name) like  LOWER(CONCAT("%",#{ammeterName,jdbcType=VARCHAR},"%")) 
	      </if>	
	    <if test="findContent != null and findContent !='' " >
        and (
        LOWER(am.C_DistrictBCDId) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
        LOWER(am.C_AddressId) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
        LOWER(am.C_ChannelId) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
        )
      </if>	
    order by am.CREATE_TIME desc
    <include refid="limit_sql" />
  </select>
  <select id="findCount" resultMap="BaseResultMap" >
 	SELECT
	count(am.meterId)
	FROM
	t_meter am
	LEFT JOIN view_epu_info epu ON am.meterBoxId = epu.row_id
		where 1=1 and am.DEL_FLAG='0' and epu.DEL_FLAG='0' 
 	  	  <if test="epuProvince != '' and epuProvince != null">  
	        and epu.epu_province=  #{epuProvince,jdbcType=VARCHAR}
	      </if>	
	      <if test="epuCity != '' and epuCity != null">  
	        and epu.epu_city=  #{epuCity,jdbcType=VARCHAR}
	      </if>	
	      <if test="epuDistrict != '' and epuDistrict != null">  
	        and epu.epu_district=  #{epuDistrict,jdbcType=VARCHAR}
	      </if>	
	      
	      <if test="ammeterName != '' and ammeterName != null"> 
	       and LOWER(am.meter_name) like  LOWER(CONCAT("%",#{ammeterName,jdbcType=VARCHAR},"%")) 
	      </if>	
	    <if test="findContent != null and findContent !='' " >
        and (
        LOWER(am.C_DistrictBCDId) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
        LOWER(am.C_AddressId) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
        LOWER(am.C_ChannelId) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
        )
      </if>		
  </select> 
   <select id="selectEpuInfoByRowId" parameterType="java.lang.String" resultMap="BaseResultMap" >
	SELECT
	am.meterId as row_id,
	am.meterBoxId as epu_id,
	am.meter_name as ammeter_name,
	am.meter_no as ammeter_id,
	am.house_id,
	am.phase_remark,
	am.CREATE_TIME,
	am.CREATE_ID,
	am.UPDATE_TIME,
	am.UPDATE_ID,
	am.DEL_FLAG,
	am.C_DistrictBCDId as district_id,
	am.C_AddressId as address_id,
	am.C_ChannelId as channel_id,
	epu.epu_province,
	epu.epu_city, 
	epu.epu_district,
	epu.epu_name,
	'M0005' as epu_type,
	epu.epu_province_name,
	epu.epu_city_name,
	epu.epu_district_name
	FROM
	t_meter am
	LEFT JOIN view_epu_info epu ON am.meterBoxId = epu.row_id
	where 1=1 and am.DEL_FLAG='0' and epu.DEL_FLAG='0'  
           <if test="rowId != null  and rowId !=''">
          and  am.meterId = #{rowId,jdbcType=VARCHAR} 
          </if> 
            <if test="epuId != null  and epuId !=''">
          and  am.meterBoxId = #{epuId,jdbcType=VARCHAR} 
          </if>                   
           order by am.UPDATE_TIME desc
  </select>
</mapper>